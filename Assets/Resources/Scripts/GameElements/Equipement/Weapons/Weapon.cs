using System.Collections;
using System.Collections.Generic;
using UnityEngine;
namespace LimoKnight {
    /// <summary>
    ///  This class is the main caller of the WeaponData class (and the objects generated by them) 
    ///  and will act as the only class who actually does things based on the data that the scriptableobj
    ///  does.
    /// </summary> 
    public class Weapon: MonoBehaviour
    {
        [SerializeField] private Transform _weaponModelTransformParent;
        [SerializeField] private PlayerCombat _playerCombat;
        private InfoWeapon _infoWeapon;
        private GameObject _weaponObject;
        private Stats _totalStats;
        public Stats TotalStats {
            get { return _totalStats;}
            set { _totalStats = value; }
        }
        
        
        public bool WeaponEquipped
        {
           get { return _infoWeapon != null; }
        }
        
        /// <summary>
        /// Everytime this function is called we will change the weapon on the character.
        /// </summary>
        public void RefreshWeapon(InfoWeapon newWeapon)
        {
            _infoWeapon = newWeapon;
            if (_infoWeapon.ModelName != null)
            {
               _weaponObject = Resources.Load
                    (ControlManager.Instance.PathToWeaponModelsFolder+_infoWeapon.ModelName) as GameObject;
                //We instantiate the item with a little bit of space in x axis to not overlap
                //this must be resolved in unity as the pivot must be at the bottom always
                GameObject weapon = Instantiate(_weaponObject, this.transform.position+new Vector3(2f,0f,0f),
                    Quaternion.identity, _weaponModelTransformParent);
                weapon.transform.SetParent(_weaponModelTransformParent, false);
                weapon.gameObject.name = _infoWeapon.Name;
            }
        }
        

    }

}